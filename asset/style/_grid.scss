//
//	_grid.scss	
//
// 	Mauro Iannicelli (June '23)
//
//	Usage:		@import "_grid";
//
//	It generates classes such as:
//
//	Container classes:
//	.cs-container-fluid |  .cs-container  |  .cs-container-sm  |  .cs-container-md  |  .cs-container-lg  |  .cs-container-xl  (SIMILAR TO BOOTSTRAP)
//
//	Col classes:
// 	.cs-col  |  .cs-col-1 ... .-col-12
// 	.cs-col-sm  |  .cs-col-sm-1 ... .cs-col-sm-12
//	...
// 	.cs-col-xl  |  .cs-col-xl-1 ... .cs-col-xl-12
//
//	Row classes:
//	.cs-row  |  .cs-row > *
//
//	Width classes
//	cs-w-100 | cs-w-75 | cs-w-66 | cs-w-50 | cs-w-33 | cs-w-25

@import "_variables";
@import "_utilities";

@mixin container-common-properties() {
	width: 100%;
	margin-left: auto;
	margin-right: auto;
}

// container classes:
@mixin generate-all-container-classes($bkpts-cont-max-width) {

	@include newLine();
	/* .#{$class-prefix}container-fluid class */
	@include newLine();

	.container-fluid {
		@include container-common-properties();
	}

	$bp-names: get-list-of-keys-from-map($bkpts-cont-max-width);
	$num-breakpoints: length($bp-names);

	$i:0;

	@each $bp-name in $bp-names {

		@include newLine();

		/* .#{$class-prefix}container-#{$bp-name} class */
			
		@include newLine();


		.#{$class-prefix}container-#{$bp-name} {
			@include container-common-properties();
		}

		$i: $i + 1;

		@if $i == 1 {
			.#{$class-prefix}container {
				@extend .#{$class-prefix}container-#{$bp-name};
			}			  
		}

		@for $i-nested from $i through $num-breakpoints {

			$bp-name-nested: get-value-from-list-by-index($bp-names,
				$i-nested);

			$bp-value-nested: get-value-from-map_list-by-key-and-index($bkpts-cont-max-width,
				$bp-name-nested,
				1);

			$bp-container-max-width-nested: get-value-from-map_list-by-key-and-index($bkpts-cont-max-width,
				$bp-name-nested,
				2);

			@media (min-width: #{$bp-value-nested}) {
				.#{$class-prefix}container-#{$bp-name} {
					max-width: #{$bp-container-max-width-nested};
				}
			}
		}
	}
}


// col classes:
@mixin generate-col-class($bp-name, $bp-value) {

	@if $bp-name !="" {
		$bp-name: "-"+$bp-name;
	}

	/* .#{$class-prefix}col#{$bp-name}, .#{$class-prefix}col#{$bp-name}-1...n classes */

	@include newLine();

	//col class | col<bp> class 
	@media (min-width: $bp-value) {
		.#{$class-prefix}col#{$bp-name} {
			flex: 1 0 0%; /* columns next to each other and equal */
			padding: 0px;
		}
	}

	//col-1...n classes | col-<bp>-1...n classes 
	@for $i from 1 through 12 {
		.#{$class-prefix}col#{$bp-name}-#{$i} {
			@media (min-width: $bp-value) {
				width: calc(100% * (#{$i} / 12));
				flex: 0 1 auto; /* flex back to its default value */
				padding: 0px;
			}
		}
	}
}

// row classes
@mixin generate-row-classes() {
	.#{$class-prefix}row {
		display: flex;
		flex-wrap: wrap;
	}

	/* For mobile-first (like in Bootstrap) the columns would be stacked by default and we should write:
	.#{$class-prefix}row > * {
		flex-shrink: 0;
		width: 100%;
		max-width: 100%;
	}
	*/

	/* Since we adopt desktop-first: */
	.#{$class-prefix}row>* {
		flex: 1 0 0%;  /* columns next to each other and equal */
		/* note: because of the above setting, in each col-n class, I must set the flex property back 
		to its default value (otherwise the col classes would not work), which is:  flex: 0 1 auto; */
	}
}

@mixin generate-all-col-classes($bkpts-cont-max-width) {
	$bp-names: get-list-of-keys-from-map($bkpts-cont-max-width);

	//col, col-1...n
	@include generate-col-class("", 0);

	//col-<bp>, col-<bp>-1...n
	@each $bp-name in $bp-names {

		$bp-value: get-value-from-map_list-by-key-and-index($bkpts-cont-max-width,
			$bp-name,
			1);

		@include generate-col-class($bp-name, $bp-value);
	}
}

// generate all container classes
@include generate-all-container-classes($breakpoint-vals-and-containers-max-width);

// generate row classes
@include generate-row-classes();

// generate all col classes
/* Note: to make columns stack onto each other, assign to each div a col-12 class (or col-sm-12... col-md-12- etc,) */
@include generate-all-col-classes($breakpoint-vals-and-containers-max-width);


/* Width classes */
.#{$class-prefix}w-100 {
	width: 100%;
}
.#{$class-prefix}w-75 {
	width: 75%;
}
.#{$class-prefix}w-66 {
	width: 75%;
}
.#{$class-prefix}w-50 {
	width: 50%;
}
.#{$class-prefix}w-33 {
	width: 75%;
}
.#{$class-prefix}w-25 {
	width: 25%;
}

