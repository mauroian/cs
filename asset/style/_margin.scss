//
//	_margin.scss	
//
// 	Mauro Iannicelli (June '23)
//
//	Usage:		@import "_margin";
//
//	It generates margin classes such as:
//
//	cs-m-0, cs-m-1, cs-m-2 ... cs-m-8, cs-m-auto 
//	cs-mt-0, cs-mt-1, cs-mt-2 ... cs-mt-8, cs-mt-auto 
//	etc. for: mb|ms|me|mx|my 
//

@import "_variables";
@import "_utilities";

/* Margin classes */

@mixin generate-margins($margins,$to-unit) {

	@each $type in $tbsexy {
		@each $sel-suffix, $value in $margins {
			.#{$class-prefix}m#{$type}-#{$sel-suffix} {

				@if $type == "t" {
					margin-top: convert-to-unit($value,$to-unit) !important;
				} @else if $type == "b" {
					margin-bottom: convert-to-unit($value,$to-unit) !important;
				} @else if $type == "s" {
					margin-left: convert-to-unit($value,$to-unit) !important;
				} @else if $type == "e" {
					margin-right: convert-to-unit($value,$to-unit) !important;
				} @else if $type == "x" {
					margin-left: convert-to-unit($value,$to-unit) !important;
					margin-right: convert-to-unit($value,$to-unit) !important;
				} @else if $type == "y" {
					margin-top: convert-to-unit($value,$to-unit) !important;
					margin-bottom: convert-to-unit($value,$to-unit) !important;
				} @else {
					margin: convert-to-unit($value,$to-unit) !important;
				}			
			}
		}
	}

	@each $type in $tbsexy {
		.#{$class-prefix}m#{$type}-auto {
			@if $type == "t" {
				margin-top: auto !important;
			} @else if $type == "b" {
				margin-bottom: auto !important;
			} @else if $type == "s" {
				margin-left: auto !important;
			} @else if $type == "e" {
				margin-right: auto !important;
			} @else if $type == "x" {
				margin-left: auto !important;
				margin-right: auto !important;
			} @else if $type == "y" {
				margin-top: auto !important;
				margin-bottom: auto !important;
			} @else {
				margin: auto !important;
			}
		}
	}
}

@include generate-margins($margins, "rem");

